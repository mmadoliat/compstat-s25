[
  {
    "objectID": "computing/computing-cheatsheets.html",
    "href": "computing/computing-cheatsheets.html",
    "title": "R cheatsheets",
    "section": "",
    "text": "The following cheatsheets come from https://posit.co/resources/cheatsheets. We haven’t covered every function and functionality listed on them, but you might still find them useful as references.",
    "crumbs": [
      "Computing",
      "Cheatsheets"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Comp-Stat",
    "section": "",
    "text": "About this site."
  },
  {
    "objectID": "slides/Chapter8.html#bootstrap-resampling-method",
    "href": "slides/Chapter8.html#bootstrap-resampling-method",
    "title": "Computational Statistics",
    "section": "Bootstrap Resampling Method",
    "text": "Bootstrap Resampling Method\n\nIntroduction to the bootstrap method\nExample: Bootstrap estimate of standard error\n\n\n# Bootstrap example: Estimate correlation between LSAT and GPA\nlibrary(bootstrap)    #for the law data\nprint(cor(law$LSAT, law$GPA))\n\n[1] 0.7763745\n\nprint(cor(law82$LSAT, law82$GPA))\n\n[1] 0.7599979\n\n# Set up the bootstrap\nB &lt;- 200            # number of replicates\nn &lt;- nrow(law)      # sample size\nR &lt;- numeric(B)     # storage for replicates\n# Bootstrap estimate of correlation\nfor (i in 1:B) {\n  idx &lt;- sample(1:n, size=n, replace=TRUE)\n  law_boot &lt;- law[idx, ]\n  R[i] &lt;- cor(law_boot$LSAT, law_boot$GPA)\n}\nmean(R)\n\n[1] 0.7795994\n\nsd(R)  # Bootstrap standard error\n\n[1] 0.1375129",
    "crumbs": [
      "Slides",
      "Bootstrap and Jackknife"
    ]
  },
  {
    "objectID": "slides/Chapter8.html#visualizing-bootstrap-resamples",
    "href": "slides/Chapter8.html#visualizing-bootstrap-resamples",
    "title": "Computational Statistics",
    "section": "Visualizing Bootstrap Resamples",
    "text": "Visualizing Bootstrap Resamples\n\n# Plotting the bootstrap distribution\nhist(R, main=\"Bootstrap Distribution of Correlation\", col=\"lightblue\")",
    "crumbs": [
      "Slides",
      "Bootstrap and Jackknife"
    ]
  },
  {
    "objectID": "slides/Chapter8.html#introduction-to-the-jackknife-method",
    "href": "slides/Chapter8.html#introduction-to-the-jackknife-method",
    "title": "Computational Statistics",
    "section": "Introduction to the Jackknife Method",
    "text": "Introduction to the Jackknife Method\n\nThe jackknife method for bias reduction\nExample: Jackknife estimate of the mean\n\n\n# Jackknife estimate of mean\nn &lt;- nrow(law)\ntheta_hat &lt;- mean(law$LSAT)\ntheta_jack &lt;- numeric(n)\n\n# Leave-one-out jackknife\nfor (i in 1:n) {\n  theta_jack[i] &lt;- mean(law$LSAT[-i])\n}\n\n# Jackknife estimate of bias\nbias_jack &lt;- (n - 1) * (mean(theta_jack) - theta_hat)\nbias_jack\n\n[1] 0",
    "crumbs": [
      "Slides",
      "Bootstrap and Jackknife"
    ]
  },
  {
    "objectID": "slides/Chapter8.html#bootstrap-confidence-intervals",
    "href": "slides/Chapter8.html#bootstrap-confidence-intervals",
    "title": "Computational Statistics",
    "section": "Bootstrap Confidence Intervals",
    "text": "Bootstrap Confidence Intervals\n\nIntroduction to bootstrap confidence intervals\nExample: Bootstrap percentile confidence interval\n\n\n# Bootstrap confidence intervals\nalpha &lt;- 0.05\nci &lt;- quantile(R, probs = c(alpha/2, 1 - alpha/2))\nci  # Bootstrap confidence interval\n\n     2.5%     97.5% \n0.4589356 0.9573571",
    "crumbs": [
      "Slides",
      "Bootstrap and Jackknife"
    ]
  },
  {
    "objectID": "slides/Chapter8.html#comparison-of-bootstrap-and-jackknife",
    "href": "slides/Chapter8.html#comparison-of-bootstrap-and-jackknife",
    "title": "Computational Statistics",
    "section": "Comparison of Bootstrap and Jackknife",
    "text": "Comparison of Bootstrap and Jackknife\n\nDiscuss the differences and use cases of bootstrap and jackknife\nRecap of methods and their benefits in reducing bias and estimating uncertainty",
    "crumbs": [
      "Slides",
      "Bootstrap and Jackknife"
    ]
  },
  {
    "objectID": "slides/Chapter9.html#introduction-to-jackknife-after-bootstrap",
    "href": "slides/Chapter9.html#introduction-to-jackknife-after-bootstrap",
    "title": "Computational Statistics",
    "section": "Introduction to Jackknife-after-Bootstrap",
    "text": "Introduction to Jackknife-after-Bootstrap\n\nExplanation of the jackknife-after-bootstrap method\nUsed to estimate bias and standard errors after bootstrap\n\n\nlibrary(boot)\nlibrary(bootstrap)\nset.seed(1111)\n\n# Function to compute the patch ratio statistic\ntheta.boot &lt;- function(patch, i) {\n  y &lt;- patch[i, \"y\"]\n  z &lt;- patch[i, \"z\"]\n  mean(y) / mean(z)\n}\n\n# Bootstrap the patch dataset\nboot.out &lt;- boot(bootstrap::patch, statistic = theta.boot, R=2000)\nboot.out\n\n\nORDINARY NONPARAMETRIC BOOTSTRAP\n\n\nCall:\nboot(data = bootstrap::patch, statistic = theta.boot, R = 2000)\n\n\nBootstrap Statistics :\n      original      bias    std. error\nt1* -0.0713061 0.008458915   0.1009777",
    "crumbs": [
      "Slides",
      "Jackknife-after-Bootstrap"
    ]
  },
  {
    "objectID": "slides/Chapter9.html#applying-jackknife-after-bootstrap",
    "href": "slides/Chapter9.html#applying-jackknife-after-bootstrap",
    "title": "Computational Statistics",
    "section": "Applying Jackknife-after-Bootstrap",
    "text": "Applying Jackknife-after-Bootstrap\n\nExample: Using the jackknife-after-bootstrap method\nChecking the bootstrap array\n\n\n# Check the bootstrap array\nA &lt;- boot.array(boot.out)\nhead(A, 3)\n\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]\n[1,]    0    1    2    1    2    0    0    2\n[2,]    0    2    1    0    1    4    0    0\n[3,]    1    1    0    1    0    1    0    4\n\n# Proportion of cases that are not resampled\nmean(A[, 1] == 0)\n\n[1] 0.3455",
    "crumbs": [
      "Slides",
      "Jackknife-after-Bootstrap"
    ]
  },
  {
    "objectID": "slides/Chapter9.html#visualizing-results",
    "href": "slides/Chapter9.html#visualizing-results",
    "title": "Computational Statistics",
    "section": "Visualizing Results",
    "text": "Visualizing Results\n\n# Plotting the bootstrap results\nplot(boot.out, index=1)",
    "crumbs": [
      "Slides",
      "Jackknife-after-Bootstrap"
    ]
  },
  {
    "objectID": "slides/Chapter9.html#conclusion",
    "href": "slides/Chapter9.html#conclusion",
    "title": "Computational Statistics",
    "section": "Conclusion",
    "text": "Conclusion\n\nRecap of jackknife-after-bootstrap technique\nImportance of combining jackknife and bootstrap for robust estimates\nPractice: Apply jackknife-after-bootstrap to other datasets\n\n\n\n\n\n🔗 tinyurl.com/Comp-Stat",
    "crumbs": [
      "Slides",
      "Jackknife-after-Bootstrap"
    ]
  },
  {
    "objectID": "slides/Chapter14.html#introduction-to-optimization",
    "href": "slides/Chapter14.html#introduction-to-optimization",
    "title": "Computational Statistics",
    "section": "Introduction to Optimization",
    "text": "Introduction to Optimization\n\nOverview of optimization methods\nExample: One-dimensional optimization using optimize\n\n\nf &lt;- function(x) log(x + log(x)) / log(1 + x)\n\n# Plotting the function\ncurve(f(x), from = 2, to = 15, ylab = \"f(x)\")\n\n# Finding the maximum\nres &lt;- optimize(f, lower = 4, upper = 8, maximum = TRUE)\nabline(v=res$maximum, col = \"red\", lwd = 2)\n\nres$maximum\n\n[1] 5.792299",
    "crumbs": [
      "Slides",
      "Optimization"
    ]
  },
  {
    "objectID": "slides/Chapter14.html#introduction-to-mle",
    "href": "slides/Chapter14.html#introduction-to-mle",
    "title": "Computational Statistics",
    "section": "Introduction to MLE",
    "text": "Introduction to MLE\n\nIntroduction to Maximum Likelihood Estimation (MLE)\nExample: MLE for Gamma distribution\n\n\n# MLE for Gamma distribution\nm &lt;- 20000\nest &lt;- matrix(0, m, 2)\nn &lt;- 2000\nr &lt;- 5\nlambda &lt;- 2\n\nobj &lt;- function(lambda, xbar, logx.bar) {\n  r &lt;- length(xbar)\n  log(lambda) - lambda * mean(xbar) + logx.bar\n}",
    "crumbs": [
      "Slides",
      "Optimization"
    ]
  },
  {
    "objectID": "slides/Chapter14.html#optimizing-mle",
    "href": "slides/Chapter14.html#optimizing-mle",
    "title": "Computational Statistics",
    "section": "Optimizing MLE",
    "text": "Optimizing MLE\n\n# Optimizing the MLE\nxbar &lt;- rnorm(n, mean = r/lambda, sd = 1)\nlogx.bar &lt;- mean(log(xbar))\nresult &lt;- optimize(obj, lower = 1, upper = 10, xbar = xbar, logx.bar = logx.bar, maximum = TRUE)\nresult\n\n$maximum\n[1] 9.999954\n\n$objective\n[1] NaN",
    "crumbs": [
      "Slides",
      "Optimization"
    ]
  },
  {
    "objectID": "slides/Chapter14.html#conclusion",
    "href": "slides/Chapter14.html#conclusion",
    "title": "Computational Statistics",
    "section": "Conclusion",
    "text": "Conclusion\n\nRecap of one-dimensional optimization and MLE techniques\nPractice: Apply optimization to other statistical problems and models\n\n\n\n\n\n🔗 tinyurl.com/Comp-Stat",
    "crumbs": [
      "Slides",
      "Optimization"
    ]
  },
  {
    "objectID": "slides/Chapter15.html#benchmarking-methods",
    "href": "slides/Chapter15.html#benchmarking-methods",
    "title": "Computational Statistics",
    "section": "Benchmarking Methods",
    "text": "Benchmarking Methods\n\nOverview of benchmarking in R\nExample: Benchmarking methods to generate a sequence\n\n\ns1 &lt;- 1:10\ns2 &lt;- seq(1, 10, 1)\ns3 &lt;- seq.int(1, 10, 1)\n\n# Benchmarking\nlibrary(microbenchmark)\nlibrary(ggplot2)\n\nn &lt;- 1000\nmb &lt;- microbenchmark(\n  seq(1, n, 1),\n  1:n,\n  times = 100\n)\nmb\n\nUnit: nanoseconds\n         expr   min      lq     mean median      uq   max neval\n seq(1, n, 1) 17103 17572.5 18664.55  17899 18259.0 55304   100\n          1:n    90   120.0   189.12    190   220.5   982   100\n\nautoplot(mb)",
    "crumbs": [
      "Slides",
      "Programming Topics"
    ]
  },
  {
    "objectID": "slides/Chapter15.html#profiling-code-for-performance",
    "href": "slides/Chapter15.html#profiling-code-for-performance",
    "title": "Computational Statistics",
    "section": "Profiling Code for Performance",
    "text": "Profiling Code for Performance\n\nIntroduction to profiling in R\nExample: Profiling a function using profvis\n\n# Install profvis for profiling\nlibrary(profvis)\n\n# Example: Profile a sorting function\nprofvis({\n  x &lt;- rnorm(1e4)\n  y &lt;- sort(x)\n})",
    "crumbs": [
      "Slides",
      "Programming Topics"
    ]
  },
  {
    "objectID": "slides/Chapter15.html#visualizing-profiling-results",
    "href": "slides/Chapter15.html#visualizing-profiling-results",
    "title": "Computational Statistics",
    "section": "Visualizing Profiling Results",
    "text": "Visualizing Profiling Results\n\n# profvis visual interface will show the profiling output",
    "crumbs": [
      "Slides",
      "Programming Topics"
    ]
  },
  {
    "objectID": "slides/Chapter15.html#conclusion",
    "href": "slides/Chapter15.html#conclusion",
    "title": "Computational Statistics",
    "section": "Conclusion",
    "text": "Conclusion\n\nRecap of benchmarking and profiling in R\nPractice: Apply these techniques to optimize code in R\n\n\n\n\n\n🔗 tinyurl.com/Comp-Stat",
    "crumbs": [
      "Slides",
      "Programming Topics"
    ]
  },
  {
    "objectID": "slides/Chapter6.html#introduction-to-monte-carlo-integration",
    "href": "slides/Chapter6.html#introduction-to-monte-carlo-integration",
    "title": "Computational Statistics",
    "section": "Introduction to Monte Carlo Integration",
    "text": "Introduction to Monte Carlo Integration\n\nBasic concepts of Monte Carlo integration\nExample: Integrating using uniform distribution\n\n\nm &lt;- 10000\nx &lt;- runif(m)\ntheta.hat &lt;- mean(exp(-x))\ntheta.hat\n\n[1] 0.6350641\n\n1 - exp(-1)\n\n[1] 0.6321206",
    "crumbs": [
      "Slides",
      "Monte Carlo Integration"
    ]
  },
  {
    "objectID": "slides/Chapter6.html#example-monte-carlo-integration-with-bounded-intervals",
    "href": "slides/Chapter6.html#example-monte-carlo-integration-with-bounded-intervals",
    "title": "Computational Statistics",
    "section": "Example: Monte Carlo integration with bounded intervals",
    "text": "Example: Monte Carlo integration with bounded intervals\n\nm &lt;- 10000\nx &lt;- runif(m, min=2, max=4)\ntheta.hat &lt;- mean(exp(-x)) * 2\ntheta.hat\n\n[1] 0.1172695\n\nexp(-2) - exp(-4)\n\n[1] 0.1170196",
    "crumbs": [
      "Slides",
      "Monte Carlo Integration"
    ]
  },
  {
    "objectID": "slides/Chapter6.html#unbounded-intervals",
    "href": "slides/Chapter6.html#unbounded-intervals",
    "title": "Computational Statistics",
    "section": "Unbounded Intervals",
    "text": "Unbounded Intervals\n\nHandling unbounded intervals in Monte Carlo integration\n\n\n# Plotting a function over an unbounded interval\nx &lt;- seq(.1, 2.5, length.out = 100)\ny &lt;- exp(-x^2 / 2)\nplot(x, y, type=\"l\", main=\"Function Plot for Unbounded Interval\", col=\"blue\")",
    "crumbs": [
      "Slides",
      "Monte Carlo Integration"
    ]
  },
  {
    "objectID": "slides/Chapter6.html#introduction-to-importance-sampling",
    "href": "slides/Chapter6.html#introduction-to-importance-sampling",
    "title": "Computational Statistics",
    "section": "Introduction to Importance Sampling",
    "text": "Introduction to Importance Sampling\n\nImportance sampling and its applications\nExample: Applying importance sampling\n\n\n# Example of importance sampling\ng &lt;- function(x) exp(-x^2 / 2)\nf &lt;- function(x) dnorm(x, mean = 1)\nx &lt;- rnorm(10000, mean = 1)\ntheta.hat &lt;- mean(g(x) / f(x))\ntheta.hat\n\n[1] 2.489332",
    "crumbs": [
      "Slides",
      "Monte Carlo Integration"
    ]
  },
  {
    "objectID": "slides/Chapter6.html#visualizing-importance-sampling",
    "href": "slides/Chapter6.html#visualizing-importance-sampling",
    "title": "Computational Statistics",
    "section": "Visualizing Importance Sampling",
    "text": "Visualizing Importance Sampling\n\n# Compare the original function with the importance sampling function\ncurve(g, from = -3, to = 3, col = \"blue\", lwd = 2, main=\"Importance Sampling: g(x) vs f(x)\")\ncurve(f, add = TRUE, col = \"red\", lty = 2, lwd = 2)\nlegend(\"topright\", legend=c(\"g(x)\", \"f(x)\"), col=c(\"blue\", \"red\"), lty=c(1, 2), lwd=2)",
    "crumbs": [
      "Slides",
      "Monte Carlo Integration"
    ]
  },
  {
    "objectID": "slides/Chapter6.html#control-variates",
    "href": "slides/Chapter6.html#control-variates",
    "title": "Computational Statistics",
    "section": "Control Variates",
    "text": "Control Variates\n\nExplanation of control variates and how they reduce variance\nExample: Using control variates in Monte Carlo integration\n\n\n# Control variates example\nm &lt;- 10000\nx &lt;- runif(m)\ntheta.hat &lt;- mean(exp(-x)) - (mean(x) - 0.5)\ntheta.hat\n\n[1] 0.6154763",
    "crumbs": [
      "Slides",
      "Monte Carlo Integration"
    ]
  },
  {
    "objectID": "slides/Chapter6.html#antithetic-variables",
    "href": "slides/Chapter6.html#antithetic-variables",
    "title": "Computational Statistics",
    "section": "Antithetic Variables",
    "text": "Antithetic Variables\n\nExplanation of antithetic variables and how they reduce variance\nExample: Applying antithetic variables\n\n\n# Antithetic variables example\nu &lt;- runif(5000)\ntheta.hat &lt;- mean((exp(-u) + exp(-(1 - u))) / 2)\ntheta.hat\n\n[1] 0.6325383\n\n1 - exp(-1)\n\n[1] 0.6321206",
    "crumbs": [
      "Slides",
      "Monte Carlo Integration"
    ]
  },
  {
    "objectID": "slides/Chapter7.html#basic-monte-carlo-estimation",
    "href": "slides/Chapter7.html#basic-monte-carlo-estimation",
    "title": "Computational Statistics",
    "section": "Basic Monte Carlo Estimation",
    "text": "Basic Monte Carlo Estimation\n\nIntroduction to Monte Carlo estimation\nExample: Estimating the expected difference of two normal variables\n\n\nm &lt;- 1000\ng &lt;- numeric(m)\nfor (i in 1:m) {\n    x &lt;- rnorm(2)\n    g[i] &lt;- abs(x[1] - x[2])\n}\nest &lt;- mean(g)\nest\n\n[1] 1.144741",
    "crumbs": [
      "Slides",
      "Monte Carlo Methods in Inference"
    ]
  },
  {
    "objectID": "slides/Chapter7.html#visualizing-monte-carlo-simulations",
    "href": "slides/Chapter7.html#visualizing-monte-carlo-simulations",
    "title": "Computational Statistics",
    "section": "Visualizing Monte Carlo Simulations",
    "text": "Visualizing Monte Carlo Simulations\n\n# Histogram of the simulated differences\nhist(g, main=\"Histogram of Differences (Monte Carlo)\", col=\"lightblue\")",
    "crumbs": [
      "Slides",
      "Monte Carlo Methods in Inference"
    ]
  },
  {
    "objectID": "slides/Chapter7.html#estimating-the-mean-squared-error-mse",
    "href": "slides/Chapter7.html#estimating-the-mean-squared-error-mse",
    "title": "Computational Statistics",
    "section": "Estimating the Mean Squared Error (MSE)",
    "text": "Estimating the Mean Squared Error (MSE)\n\nMonte Carlo estimation of MSE for trimmed means\n\n\nn &lt;- 20\nm &lt;- 1000\nmean_trim &lt;- numeric(m)\nfor (i in 1:m) {\n    x &lt;- rnorm(n)\n    mean_trim[i] &lt;- mean(x, trim = 0.1)\n}\nmse &lt;- mean((mean_trim - 0)^2)\nmse\n\n[1] 0.05703242",
    "crumbs": [
      "Slides",
      "Monte Carlo Methods in Inference"
    ]
  },
  {
    "objectID": "slides/Chapter7.html#visualizing-mse-simulations",
    "href": "slides/Chapter7.html#visualizing-mse-simulations",
    "title": "Computational Statistics",
    "section": "Visualizing MSE Simulations",
    "text": "Visualizing MSE Simulations\n\n# Histogram of the trimmed means\nhist(mean_trim, main=\"Trimmed Means (Monte Carlo MSE)\", col=\"lightgreen\")",
    "crumbs": [
      "Slides",
      "Monte Carlo Methods in Inference"
    ]
  },
  {
    "objectID": "slides/Chapter7.html#additional-monte-carlo-techniques",
    "href": "slides/Chapter7.html#additional-monte-carlo-techniques",
    "title": "Computational Statistics",
    "section": "Additional Monte Carlo Techniques",
    "text": "Additional Monte Carlo Techniques\n\nExploring advanced Monte Carlo techniques for inference\nExample: Hypothesis testing with Monte Carlo methods\n\n\n# Monte Carlo test example: Hypothesis testing\nn &lt;- 50\nm &lt;- 1000\ntest_stat &lt;- numeric(m)\nfor (i in 1:m) {\n    x &lt;- rnorm(n)\n    test_stat[i] &lt;- mean(x)\n}\np_value &lt;- mean(test_stat &gt;= 1.96)\np_value\n\n[1] 0",
    "crumbs": [
      "Slides",
      "Monte Carlo Methods in Inference"
    ]
  },
  {
    "objectID": "slides/Chapter7.html#conclusion",
    "href": "slides/Chapter7.html#conclusion",
    "title": "Computational Statistics",
    "section": "Conclusion",
    "text": "Conclusion\n\nRecap of Monte Carlo methods in inference, MSE estimation, and hypothesis testing\nPractice: Apply these methods to other inferential problems\n\n\n\n\n\n🔗 tinyurl.com/Comp-Stat",
    "crumbs": [
      "Slides",
      "Monte Carlo Methods in Inference"
    ]
  },
  {
    "objectID": "hw/HW 1.html",
    "href": "hw/HW 1.html",
    "title": "Computational Statistics - HW 1",
    "section": "",
    "text": "Questions 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, and 1.8\n\n7 out of 8 Question (for Undergraduates)\nAll Questions (for Graduates)",
    "crumbs": [
      "HW",
      "HW 1"
    ]
  },
  {
    "objectID": "hw/HW 1.html#from-the-textbook",
    "href": "hw/HW 1.html#from-the-textbook",
    "title": "Computational Statistics - HW 1",
    "section": "",
    "text": "Questions 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, and 1.8\n\n7 out of 8 Question (for Undergraduates)\nAll Questions (for Graduates)",
    "crumbs": [
      "HW",
      "HW 1"
    ]
  },
  {
    "objectID": "hw/HW 1.html#extra-question",
    "href": "hw/HW 1.html#extra-question",
    "title": "Computational Statistics - HW 1",
    "section": "Extra Question",
    "text": "Extra Question\nFollow the example we had in the classroom, find the \\(E(X)\\) and \\(Var(X)\\) based on (i) equations (2.1) and (2.2), and (ii) simulation for the following cases. Does (i) and (ii) give you the same result?\n(a) \\(X\\sim\\chi^2(\\nu=N+1)\\), where \\(N\\sim Poisson(\\lambda)\\).\n(b) (Only for Graduate Students) \\(X\\sim Binomial(n=Y, p=P)\\), where \\(Y\\sim Poisson(\\lambda)\\) and \\(P\\sim Beta(\\alpha, \\beta)\\).",
    "crumbs": [
      "HW",
      "HW 1"
    ]
  },
  {
    "objectID": "hw/HW 2.html",
    "href": "hw/HW 2.html",
    "title": "Computational Statistics - HW 2",
    "section": "",
    "text": "Questions 3.2, 3.3, 3.7, 3.8, 3.11, 3.12, 3.13, and 3.14\n\n6 out of 8 Questions (for Undergraduate students)\nAll Questions (for Graduate students)"
  },
  {
    "objectID": "hw/HW 2.html#from-textbook",
    "href": "hw/HW 2.html#from-textbook",
    "title": "Computational Statistics - HW 2",
    "section": "",
    "text": "Questions 3.2, 3.3, 3.7, 3.8, 3.11, 3.12, 3.13, and 3.14\n\n6 out of 8 Questions (for Undergraduate students)\nAll Questions (for Graduate students)"
  },
  {
    "objectID": "hw/HW 5.html",
    "href": "hw/HW 5.html",
    "title": "Computational Statistics - HW 5",
    "section": "",
    "text": "Questions 7.1, 7.2, 7.3, 7.5, 7.6, 7.7, and 7.8 from the Textbook.\n\n5 out of 7 Questions (for Undergraduate students)\n6 out of 7 Questions (for Graduate students)"
  },
  {
    "objectID": "hw/HW 5.html#from-textbook",
    "href": "hw/HW 5.html#from-textbook",
    "title": "Computational Statistics - HW 5",
    "section": "",
    "text": "Questions 7.1, 7.2, 7.3, 7.5, 7.6, 7.7, and 7.8 from the Textbook.\n\n5 out of 7 Questions (for Undergraduate students)\n6 out of 7 Questions (for Graduate students)"
  },
  {
    "objectID": "hw/HW 3.html",
    "href": "hw/HW 3.html",
    "title": "Computational Statistics - HW 3",
    "section": "",
    "text": "Questions 5.1, 5.2, 5.3, 5.4, 5.5, 5.6 from the Textbook.\n\n5 out of 6 Questions (for Undergraduate students)\nAll Questions (for Graduate students)"
  },
  {
    "objectID": "hw/HW 3.html#from-textbook",
    "href": "hw/HW 3.html#from-textbook",
    "title": "Computational Statistics - HW 3",
    "section": "",
    "text": "Questions 5.1, 5.2, 5.3, 5.4, 5.5, 5.6 from the Textbook.\n\n5 out of 6 Questions (for Undergraduate students)\nAll Questions (for Graduate students)"
  },
  {
    "objectID": "course-links.html",
    "href": "course-links.html",
    "title": "Useful links",
    "section": "",
    "text": "Homework\nStat Calculator\nDistribution Calculator\nStat Tables\n🔗 on D2L\n🔗 StatCalc(JAMM)\n🔗 DistCalc\n🔗 StatTables\n\n\nTexbooks\n🔗 Computational Statistics in Python\n🔗 R Package\n🔗 Advanced R by Hadley Wickham\n🔗 Quarto\n🔗 R Markdown\n🔗 ggplot2: Elegant Graphics for Data Analysis\n🔗 Fundamentals of Data Visualization\n🔗 Data Visualization: A Practical Introduction\n🔗 R for Data Science\n\n\nSome Package documentation\n🔗 ggplot2: ggplot2.tidyverse.org\n🔗 dplyr: dplyr.tidyverse.org\n🔗 tidyr: tidyr.tidyverse.org\n🔗 forcats: forcats.tidyverse.org\n🔗 stringr: stringr.tidyverse.org\n🔗 lubridate: lubridate.tidyverse.org\n🔗 readr: readr.tidyverse.org",
    "crumbs": [
      "Course information",
      "Useful links"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Computational Statistics - Spring 2025",
    "section": "",
    "text": "This page contains an outline of the topics, content, and assignments for the semester. Note that this schedule will be updated as the semester progresses and the timeline of topics and assignments might be updated throughout the semester.\n\n\n\n\n\n\n\n\n\nWEEK\nDATE\nTOPIC\nMATERIALS\nCODE\nDUE\n\n\n\n\n1\nTue, Jan 14\nWhat to cover in this class?\n🔗Syllabus\n\n\n\n\n\n\n\n\nThu, Jan 16\nIntroduction to Statistical Computing 🎥 Lecture 2\n📚Chapt 1-A\nR👩‍💻\n\n\n\n\n\n\nFri, Jan 17\nReview Probability  and Statistics\n💻Review Probability  📖Introduction to Statistics ebook\n\n\n📝 HW 0 or  Learn R in R\n\n\n2\nTue, Jan 21\n⛈ Sever Weather - No Class\n\n\n\n\n\n\n\n\n\n\nThu, Jan 23\nProbability and Statistics Review 🎥 Lecture 3\n📚Chapt 2-A\nR👩‍💻\n\n\n\n\n3\nTue, Jan 28\nRegression 🎥 Lecture 4\n💻Regression\nR Shiny👩‍💻\n\n\n\n\n\n\nThu, Jan 30\nRegularization in Regression  Method of Estimations 🎥 Lecture 5\n💻Ridge and Lasso  📚💻Chapt 2-B\n\n\n\n\n\n\n\n\nFri, Jan 31\n\n\n\n\nD2L✍️\n📝 HW 1 at 11:50 pm  Solution\n\n\n4\nTue, Feb 4\nMethods ofGenerating Random Vars. 🎥 Lecture 6\n📚Chapt 3-A\nR👩‍💻\n\n\n\n\n\n\nThu, Feb 6\nMore on Generating RV’s 🎥 Lecture 7\n📚Chapt 3-B\n\n\n\n\n\n\n5\nTue, Feb 11\nK-means Clustering 🎥 Lecture 8\n💻Clustering-A\nR👩‍💻\n\n\n\n\n\n\nThu, Feb 13\nHirarchical Clustering 🎥 Lecture 9\n💻Clustering-B\n\n\n\n\n\n\n\n\nFri, Feb 14\n\n\n\n\nD2L✍️\n📝 HW 2 at 11:50 pm  Solution\n\n\n6\nTue, Feb 18\nVizualization 🎥 Lecture 10\n📚Chapt 5\nR👩‍💻\n\n\n\n\n\n\nThu, Feb 20\nMonte Carlo Integration 🎥 Lecture 11\n📚Chapt 6-A\nR👩‍💻\n\n\n\n\n7\nTue, Feb 25\nVariance Reduction 🎥 Lecture 12\n📚Chapt 6-B\n\n\n\n\n\n\n\n\nThu, Feb 27\nImportance Sampling and Var. Red. 🎥 Lecture 13  Developing an R package\n📚Chapt 6-C  📖R package\n\n\n\n\n\n\n\n\nFri, Feb 28\n\n\n\n\nD2L✍️\n📝 HW 3 at 11:50 pm  Solution\n\n\n8\nTue, Mar 4\nDeveloping an Interactive Shiny App 🎥 Lecture 14\n📖Shiny\nR👩‍💻\n\n\n\n\n\n\nThu, Mar 6\nObject Oriented Programming in R 🎥 Lecture 15\n📖OOP\nR👩‍💻\n\n\n\n\n\n\nFri, Mar 7\n\n\n\n\nD2L✍️\n📝 HW 4 at 11:50 pm  Solution\n\n\n\n\nTue, Mar 11\n🌴 Spring Break\n\n\n\n\n\n\n\n\n\n\nThu, Mar 13\n🌴 Spring Break\n\n\n\n\n\n\n\n\n9\nTue, Mar 18\nMonte Carlo Methods 🎥 Lecture 16\n📚Chapt 7-A\nR👩‍💻\n\n\n\n\n\n\nThu, Mar 20\nMore on Monte Carlo Methods 🎥 Lecture 17\n📚Chapt 7-B  📚💻Chapt 7-C\n\n\n\n\n\n\n10\nTue, Mar 25\nBootstrap 🎥 Lecture 18\n📚Chapt 8-A\nR👩‍💻\n\n\n\n\n\n\nThu, Mar 27\nMore on Bootstrap and Jackknife 🎥 Lecture 19\n📑Chapt 8-B  🖥️Chapt 8-C  📚Chapt 9\nR👩‍💻\n\n\n\n\n\n\nFri, Mar 28\n\n\n\n\nD2L✍️\n📝 HW 5 at 11:50 pm  Solution\n\n\n11\nTue, Apr 1\nDensity Estimation 🎥 Lecture 20\n📚Chapt 12\nR👩‍💻\n\n\n\n\n\n\nThu, Apr 3\nNumerical Methods in R 🎥 Lecture 21\n📚Chapt 13-A\nR👩‍💻\n\n\n\n\n\n\nFri, Apr 4\n\n\n\n\nD2L✍️\n📝 HW 6 at 11:50 pm  Solution\n\n\n12\nTue, Apr 8\nMore on Numerical Methods 🎥 Lecture 22  Optimization in R\n📚Chapt 13-B\n\n\n\n\n\n\n\n\nThu, Apr 10\nMore on Optimization 🎥 Lecture 23\n📚Chapt 14-A\nR👩‍💻\n\n\n\n\n\n\nFri, Apr 11\n\n\n\n\n[D2L✍️]\n📝 [HW 7] at 11:50 pm\n\n\n13\nTue, Apr 15\nExpectation-Maximization Algorithm 🎥 Lecture 24\n📑Chapt 14-B\nR👩‍💻\n\n\n\n\n\n\nThu, Apr 17\n🐰 Easter Break\n\n\n\n\n\n\n\n\n14\nTue, Apr 22\nProgramming Topics\n📚Chapt 15\nR👩‍💻\n\n\n\n\n\n\nThu, Apr 24\nDeep Learning in R\n💻DLiR-A\nR👩‍💻\n\n\n\n\n15\nTue, Apr 29\nFully Connected Networks (FCN)\n💻DLiR-B\n\n\n\n\n\n\n\n\nThu, May 1\nConvolutional Nueral Nets (CNN)\n💻DLiR-C\n\n\n\n\n\n\n16\nMon, May 5\nFinal Project\n📃Presentations : 10:30 am - 12:30 pm",
    "crumbs": [
      "Course information",
      "Schedule"
    ]
  },
  {
    "objectID": "hw/HW 4.html",
    "href": "hw/HW 4.html",
    "title": "Computational Statistics - HW 4",
    "section": "",
    "text": "Questions 6.1, 6.2, 6.3, 6.6, 6.7, 6.9, and 6.12 from the Textbook.\n\n5 out of 7 Questions (for Undergraduate students)\n6 out of 7 Questions (for Graduate students)"
  },
  {
    "objectID": "hw/HW 4.html#from-textbook",
    "href": "hw/HW 4.html#from-textbook",
    "title": "Computational Statistics - HW 4",
    "section": "",
    "text": "Questions 6.1, 6.2, 6.3, 6.6, 6.7, 6.9, and 6.12 from the Textbook.\n\n5 out of 7 Questions (for Undergraduate students)\n6 out of 7 Questions (for Graduate students)"
  },
  {
    "objectID": "hw/HW 7.html",
    "href": "hw/HW 7.html",
    "title": "Computational Statistics - HW 7",
    "section": "",
    "text": "Questions 8.2, 8.10, 8.11, 9.1, 9.4 from the Textbook, and “Course Evaluation”.\n\n4 out of 6 Questions (for Undergraduate students)\n5 out of 6 Questions (for Graduate students)"
  },
  {
    "objectID": "hw/HW 7.html#from-textbook",
    "href": "hw/HW 7.html#from-textbook",
    "title": "Computational Statistics - HW 7",
    "section": "",
    "text": "Questions 8.2, 8.10, 8.11, 9.1, 9.4 from the Textbook, and “Course Evaluation”.\n\n4 out of 6 Questions (for Undergraduate students)\n5 out of 6 Questions (for Graduate students)"
  },
  {
    "objectID": "hw/HW 6.html",
    "href": "hw/HW 6.html",
    "title": "Computational Statistics - HW 6",
    "section": "",
    "text": "Questions 8.1, 8.4, 8.5, 8.6, 8.7, 8.8 and 8.9 from the Textbook.\n\n5 out of 7 Questions (for Undergraduate students)\n6 out of 7 Questions (for Graduate students)"
  },
  {
    "objectID": "hw/HW 6.html#from-textbook",
    "href": "hw/HW 6.html#from-textbook",
    "title": "Computational Statistics - HW 6",
    "section": "",
    "text": "Questions 8.1, 8.4, 8.5, 8.6, 8.7, 8.8 and 8.9 from the Textbook.\n\n5 out of 7 Questions (for Undergraduate students)\n6 out of 7 Questions (for Graduate students)"
  },
  {
    "objectID": "course-syllabus.html",
    "href": "course-syllabus.html",
    "title": "Syllabus - Computational Statistics - Spring 2025",
    "section": "",
    "text": "Course Title: MATH 4750/MSSC 5750: Computational Statistics\nMeeting Time: TuTh 2:00pm - 3:15pm\nLocation: David Straz Nursing 402 (Microsoft Teams)\nWebsite: http://tinyurl.com/Comp-Stat",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-information",
    "href": "course-syllabus.html#course-information",
    "title": "Syllabus - Computational Statistics - Spring 2025",
    "section": "",
    "text": "Course Title: MATH 4750/MSSC 5750: Computational Statistics\nMeeting Time: TuTh 2:00pm - 3:15pm\nLocation: David Straz Nursing 402 (Microsoft Teams)\nWebsite: http://tinyurl.com/Comp-Stat",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#instructor-details",
    "href": "course-syllabus.html#instructor-details",
    "title": "Syllabus - Computational Statistics - Spring 2025",
    "section": "Instructor Details",
    "text": "Instructor Details\n\nName: Mehdi Maadooliat, Ph.D.\nOffice: CU 351\nOffice Hours: TuTh 12:25 - 1:55pm in CU 351 or by e-mail",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-description",
    "href": "course-syllabus.html#course-description",
    "title": "Syllabus - Computational Statistics - Spring 2025",
    "section": "Course Description",
    "text": "Course Description\nComputational statistics and statistical computing are two areas that employ computational, graphical, and numerical approaches to solve statistical problems. Competent statisticians must not just run existing programs but understand the principles behind them. This class introduces statistically-oriented programming targeted at statistics majors, with no extensive programming background assumed.\nThis course covers traditional core material of computational statistics with an emphasis on using R through an example-based approach.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#learning-outcomes",
    "href": "course-syllabus.html#learning-outcomes",
    "title": "Syllabus - Computational Statistics - Spring 2025",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of the course, students will:\n\nUnderstand core programming concepts, including data structures, functions, iteration, debugging, logical design, and abstraction.\nWrite maintainable code, debug, and test code for correctness.\nSet up and run stochastic simulations in parallel.\nFit basic statistical models and assess the results.\nWork with and filter large datasets.\nComment and organize code effectively.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#prerequisites",
    "href": "course-syllabus.html#prerequisites",
    "title": "Syllabus - Computational Statistics - Spring 2025",
    "section": "Prerequisites",
    "text": "Prerequisites\n\nCOSC 1010\nMATH 3100\nMATH 4700 or MATH 4780",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#textbooks",
    "href": "course-syllabus.html#textbooks",
    "title": "Syllabus - Computational Statistics - Spring 2025",
    "section": "Textbooks",
    "text": "Textbooks\n\nMain: Statistical Computing with R, 2nd edition by Maria L. Rizzo. Chapman and Hall/CRC, 2019. ISBN: 1466553324.\nSupplementary: Computational Statistics, 2nd Edition by Geof H. Givens and Jennifer A. Hoeting. Wiley, 2012. ISBN: 9780470533314.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#grading-breakdown",
    "href": "course-syllabus.html#grading-breakdown",
    "title": "Syllabus - Computational Statistics - Spring 2025",
    "section": "Grading Breakdown",
    "text": "Grading Breakdown\n\nClass Participation: 10%\nHomework: 30%\nTeam Project: 30%\nFinal Exam or HW/Project (Instructor will decide): 30%\n\n\nGrading Scale\n\n\n\nGrade\nRange\n\n\n\n\nA\n95 - 100%\n\n\nA-\n89 - 94.99%\n\n\nB+\n84 - 88.99%\n\n\nB\n78 - 83.99%\n\n\nB-\n73 - 77.99%\n\n\nC+\n67 - 72.99%\n\n\nC\n62 - 66.99%\n\n\nC-\n56 - 61.99%\n\n\nD+\n51 - 55.99%\n\n\nD\n45 - 50.99%\n\n\nF\n&lt; 44.99%\n\n\n\nNotes:\n\nFor students in MSSC 5750, there will be extra questions in Homework, and higher expectation for Project.\nNo late homework will be accepted, and no make-up work will be allowed unless in the case of an emergency. Submit incomplete work if necessary, but ensure scanned PDFs are legible before submission.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#make-up-policy",
    "href": "course-syllabus.html#make-up-policy",
    "title": "Syllabus - Computational Statistics - Spring 2025",
    "section": "Make-up Policy",
    "text": "Make-up Policy\nNo make-up exams or homework unless there is an emergency.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#attendance",
    "href": "course-syllabus.html#attendance",
    "title": "Syllabus - Computational Statistics - Spring 2025",
    "section": "Attendance",
    "text": "Attendance\nAttendance is required and subject to the College of Arts and Sciences policy.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#academic-honesty",
    "href": "course-syllabus.html#academic-honesty",
    "title": "Syllabus - Computational Statistics - Spring 2025",
    "section": "Academic Honesty",
    "text": "Academic Honesty\nStudents are expected to follow the University’s policy on academic honesty as outlined in the Bulletin.\nTL;DR: Don’t cheat!\nPlease abide by the following as you work on assignments in this course:\n\nCollaboration: Only work that is clearly assigned as team work should be completed collaboratively.\n\nThe homework assignments must also be completed individually and you are welcomed to discuss the assignment with classmates at a high level (e.g., discuss what’s the best way for approaching a problem, what functions are useful for accomplishing a particular task, etc.). However you may not directly share answers to questions (including any code) with anyone other than myself.\nFor the projects, collaboration within teams is not only allowed, but expected. Communication between teams at a high level is also allowed however you may not share code or components of the project across teams.\nOn individual assignments you may not directly share code with another student in this class, and on team assignments you may not directly share code with another team in this class.\n\nOnline resources: I am well aware that a huge volume of code is available on the web to solve any number of problems. Unless I explicitly tell you not to use something, the course’s policy is that you may make use of any online resources (e.g., StackOverflow) but you must explicitly cite where you obtained any code you directly use (or use as inspiration). Any recycled code that is discovered and is not explicitly cited will be treated as plagiarism.\nUse of generative artificial intelligence (AI): You should treat generative AI, such as ChatGPT, the same as other online resources. There are two guiding principles that govern how you can use AI in this course:1 (1) Cognitive dimension: Working with AI should not reduce your ability to think clearly. We will practice using AI to facilitate—rather than hinder—learning. (2) Ethical dimension: Students using AI should be transparent about their use and make sure it aligns with academic integrity.\n\n✅ AI tools for code: You may make use of the technology for coding examples on assignments; if you do so, you must explicitly cite where you obtained the code. Any recycled code that is discovered and is not explicitly cited will be treated as plagiarism. You may use these guidelines for citing AI-generated content.\n❌ AI tools for narrative: Unless instructed otherwise, you may not use generative AI to write narrative on assignments. In general, you may use generative AI as a resource as you complete assignments but not to answer the exercises for you.\n\nYou are ultimately responsible for the work you turn in; it should reflect your understanding of the course content.\n\nIf you are unsure if the use of a particular resource complies with the academic honesty policy, please ask the instructor.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-topics",
    "href": "course-syllabus.html#course-topics",
    "title": "Syllabus - Computational Statistics - Spring 2025",
    "section": "Course Topics",
    "text": "Course Topics\n\nManaging Input/Output in R\nData structures in R\nData transformations: strings, factors, dates\nStatistical summaries and basic tests in R\nGraphics in R\nMonte Carlo Integration & Variance Reduction\nBootstrap and Jackknife\nDensity Estimation\nRegularization:\n\nRidge and Lasso\nSmoothing\n\nDimension Reduction and Clustering\n\nK-Means and Hierarchical Clustering\nPrincipal Component Analysis (PCA)\n\nNumerical Methods in R\n\nOptimization\nExpectation-Maximization (EM) Algorithm\n\nAdvanced R Programming\n\nIntroduction to Parallel Computing\nObject Oriented Programming in R\nDeveloping an R Package\nDeveloping an Interactive Shiny App\nFunctions and loops in C and using C in R\n\nDeep Learning in R\n\nBasics of Neural Network\n\nImplementation using TensorFlow and Keras\n\nFully Connected Network (FCN)\nConvolutional Neural Networks (CNN)",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#important-dates",
    "href": "course-syllabus.html#important-dates",
    "title": "Syllabus - Computational Statistics - Spring 2025",
    "section": "Important dates",
    "text": "Important dates\n\nMonday, January 13: Classes begin\nTuesday, January 21: Drop/add ends\nSaturday - Sunday, March 8 - 16: Spring Break\nFriday, April 11: Last day to withdraw with W\nThursday - Monday, April 17 - 21: Easter Break\nSaturday, May 3: Classes end\nMonday, May 5, 10:30 am - 12:30 pm: Presentations\n\nFor more important dates, see the full MU Academic Calendar.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#important-note",
    "href": "course-syllabus.html#important-note",
    "title": "Syllabus - Computational Statistics - Spring 2025",
    "section": "Important Note",
    "text": "Important Note\nThe syllabus may be modified throughout the course. Any substantial modifications will result in a reissued syllabus.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "slides/Chapter1.html#probability-distributions",
    "href": "slides/Chapter1.html#probability-distributions",
    "title": "Computational Statistics",
    "section": "Probability Distributions",
    "text": "Probability Distributions\n\ndnorm(), pnorm(), qnorm()\nExploring statistical tests in R",
    "crumbs": [
      "Slides",
      "Intro. to Stat. Comp."
    ]
  },
  {
    "objectID": "slides/Chapter1.html#statistical-tests",
    "href": "slides/Chapter1.html#statistical-tests",
    "title": "Computational Statistics",
    "section": "Statistical Tests",
    "text": "Statistical Tests\n\nt.test(), chisq.test()",
    "crumbs": [
      "Slides",
      "Intro. to Stat. Comp."
    ]
  },
  {
    "objectID": "slides/Chapter1.html#defining-functions",
    "href": "slides/Chapter1.html#defining-functions",
    "title": "Computational Statistics",
    "section": "Defining Functions",
    "text": "Defining Functions\n\nfunction(arglist) expr\nReturn values and default arguments\n\n\nsumdice &lt;- function(n) {\n  k &lt;- sample(1:6, size=n, replace=TRUE)\n  return(sum(k))\n}\nsumdice(2)\n\n[1] 10",
    "crumbs": [
      "Slides",
      "Intro. to Stat. Comp."
    ]
  },
  {
    "objectID": "slides/Chapter1.html#data-structures-in-r",
    "href": "slides/Chapter1.html#data-structures-in-r",
    "title": "Computational Statistics",
    "section": "Data Structures in R",
    "text": "Data Structures in R\n\nArrays, matrices, and data frames\n\n\n# Creating vectors and matrices\nx &lt;- c(1, 2, 3, 4)\nmatrix_x &lt;- matrix(x, nrow=2, ncol=2)\nprint(matrix_x)\n\n     [,1] [,2]\n[1,]    1    3\n[2,]    2    4\n\n\n\nExample: Iris data set\n\n\ndata(iris)\nsummary(iris)\n\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50",
    "crumbs": [
      "Slides",
      "Intro. to Stat. Comp."
    ]
  },
  {
    "objectID": "slides/Chapter1.html#basic-plots",
    "href": "slides/Chapter1.html#basic-plots",
    "title": "Computational Statistics",
    "section": "Basic Plots",
    "text": "Basic Plots\n\nplot(), hist(), boxplot()\n\n\nCodePlot\n\n\n\nplot(iris);\n# boxplot(iris);\n# hist(iris[,1])",
    "crumbs": [
      "Slides",
      "Intro. to Stat. Comp."
    ]
  },
  {
    "objectID": "slides/Chapter1.html#introduction-to-ggplot2",
    "href": "slides/Chapter1.html#introduction-to-ggplot2",
    "title": "Computational Statistics",
    "section": "Introduction to ggplot2",
    "text": "Introduction to ggplot2\n\nVisualizing using ggplot2\n\n\nCodePlot\n\n\n\nlibrary(ggplot2)\nggplot(iris, aes(x=Sepal.Length, y=Petal.Length)) + \n  geom_point() + \n  geom_smooth(method=\"lm\", se=FALSE, color=\"blue\") + \n  theme_minimal() + \n  labs(title=\"Sepal vs Petal Length in Iris Dataset\", x=\"Sepal Length\", y=\"Petal Length\")",
    "crumbs": [
      "Slides",
      "Intro. to Stat. Comp."
    ]
  },
  {
    "objectID": "slides/Chapter1.html#managing-files",
    "href": "slides/Chapter1.html#managing-files",
    "title": "Computational Statistics",
    "section": "Managing Files",
    "text": "Managing Files\n\nWorking directories and file input/output\nUsing scripts and automation",
    "crumbs": [
      "Slides",
      "Intro. to Stat. Comp."
    ]
  },
  {
    "objectID": "slides/Chapter1.html#dynamic-documents",
    "href": "slides/Chapter1.html#dynamic-documents",
    "title": "Computational Statistics",
    "section": "Dynamic Documents",
    "text": "Dynamic Documents\n\nCreating reports with R Markdown\nIntroduction to knitr package",
    "crumbs": [
      "Slides",
      "Intro. to Stat. Comp."
    ]
  },
  {
    "objectID": "slides/Chapter12.html#histogram-density-estimates",
    "href": "slides/Chapter12.html#histogram-density-estimates",
    "title": "Computational Statistics",
    "section": "Histogram Density Estimates",
    "text": "Histogram Density Estimates\n\nIntroduction to density estimation using histograms\nExample: Histogram density estimates using Sturges’ Rule\n\n\nset.seed(12345)\nn &lt;- 25\nx &lt;- rnorm(n)\n\n# Calculate breaks according to Sturges' Rule\nnclass &lt;- ceiling(1 + log2(n))\ncwidth &lt;- diff(range(x) / nclass)\nbreaks &lt;- min(x) + cwidth * 0:nclass\n\n# Default histogram\nh.default &lt;- hist(x, freq = FALSE, xlab = \"default\", main = \"Histogram: Default\")",
    "crumbs": [
      "Slides",
      "Density Estimation"
    ]
  },
  {
    "objectID": "slides/Chapter12.html#kernel-density-estimation",
    "href": "slides/Chapter12.html#kernel-density-estimation",
    "title": "Computational Statistics",
    "section": "Kernel Density Estimation",
    "text": "Kernel Density Estimation\n\nIntroduction to kernel density estimation (KDE)\nExample: Applying KDE to data\n\n\n# Kernel density estimate\ndens &lt;- density(x)\nplot(dens, main = \"Kernel Density Estimate\", col = \"blue\", lwd = 2)",
    "crumbs": [
      "Slides",
      "Density Estimation"
    ]
  },
  {
    "objectID": "slides/Chapter12.html#visualizing-kernel-density",
    "href": "slides/Chapter12.html#visualizing-kernel-density",
    "title": "Computational Statistics",
    "section": "Visualizing Kernel Density",
    "text": "Visualizing Kernel Density\n\n# Overlay histogram and KDE\nhist(x, freq = FALSE, col = \"lightgray\", border = \"white\", main = \"Histogram with KDE\")\nlines(dens, col = \"red\", lwd = 2)",
    "crumbs": [
      "Slides",
      "Density Estimation"
    ]
  },
  {
    "objectID": "slides/Chapter12.html#conclusion",
    "href": "slides/Chapter12.html#conclusion",
    "title": "Computational Statistics",
    "section": "Conclusion",
    "text": "Conclusion\n\nRecap of histogram density estimation and kernel density estimation\nPractice: Apply density estimation techniques to other datasets\n\n\n\n\n\n🔗 tinyurl.com/Comp-Stat",
    "crumbs": [
      "Slides",
      "Density Estimation"
    ]
  },
  {
    "objectID": "slides/Chapter3.html#sampling-from-a-finite-population",
    "href": "slides/Chapter3.html#sampling-from-a-finite-population",
    "title": "Computational Statistics",
    "section": "Sampling from a Finite Population",
    "text": "Sampling from a Finite Population\n\nIntroduction to finite population sampling\nExample: Tossing coins, choosing lottery numbers\n\n\n# Sampling examples\nsample(0:1, size = 10, replace = TRUE)  # Tossing coins\n\n [1] 1 1 1 0 1 0 1 0 0 1\n\nsample(1:100, size = 6, replace = FALSE)  # Choosing lottery numbers\n\n[1] 29 67 48 78 41 59\n\nsample(letters)  # Permutation of letters\n\n [1] \"f\" \"u\" \"q\" \"t\" \"a\" \"m\" \"j\" \"l\" \"h\" \"e\" \"i\" \"p\" \"w\" \"z\" \"c\" \"o\" \"k\" \"b\" \"x\"\n[20] \"y\" \"r\" \"v\" \"g\" \"n\" \"d\" \"s\"",
    "crumbs": [
      "Slides",
      "Generating RVs"
    ]
  },
  {
    "objectID": "slides/Chapter3.html#multinomial-distribution",
    "href": "slides/Chapter3.html#multinomial-distribution",
    "title": "Computational Statistics",
    "section": "Multinomial Distribution",
    "text": "Multinomial Distribution\n\nIntroduction to multinomial distribution\nExample: Sampling from a multinomial distribution\n\n\n# Sample from multinomial distribution\nx &lt;- sample(1:3, size = 100, replace = TRUE, prob = c(.2, .3, .5))\ntable(x)\n\nx\n 1  2  3 \n24 34 42",
    "crumbs": [
      "Slides",
      "Generating RVs"
    ]
  },
  {
    "objectID": "slides/Chapter3.html#continuous-case",
    "href": "slides/Chapter3.html#continuous-case",
    "title": "Computational Statistics",
    "section": "Continuous Case",
    "text": "Continuous Case\n\nExplanation of the inverse transform method for continuous distributions\nExample: Simulating exponential random variables\n\n\n# Inverse transform method for exponential distribution\nn &lt;- 1000\nU &lt;- runif(n)\nX &lt;- -log(1 - U)\nhist(X, main=\"Exponential Distribution via Inverse Transform\", col=\"lightblue\")",
    "crumbs": [
      "Slides",
      "Generating RVs"
    ]
  },
  {
    "objectID": "slides/Chapter3.html#discrete-case",
    "href": "slides/Chapter3.html#discrete-case",
    "title": "Computational Statistics",
    "section": "Discrete Case",
    "text": "Discrete Case\n\nExample of applying the inverse transform method to discrete random variables\n\n\n# Inverse transform method for geometric distribution\np &lt;- 0.5\nX_geom &lt;- ceiling(log(1 - runif(n)) / log(1 - p))\nhist(X_geom, main=\"Geometric Distribution via Inverse Transform\", col=\"lightgreen\")",
    "crumbs": [
      "Slides",
      "Generating RVs"
    ]
  },
  {
    "objectID": "slides/Chapter3.html#introduction-to-acceptance-rejection-method",
    "href": "slides/Chapter3.html#introduction-to-acceptance-rejection-method",
    "title": "Computational Statistics",
    "section": "Introduction to Acceptance-Rejection Method",
    "text": "Introduction to Acceptance-Rejection Method\n\nExplanation of the acceptance-rejection method\nExample: Sampling from a target distribution\n\n\n# Acceptance-rejection method example\ntarget &lt;- function(x) { ifelse(x &gt; 0, exp(-x), 0) }\nproposal &lt;- function(x) { dnorm(x, mean = 2, sd = 1) }\n\nX &lt;- rnorm(1000, mean = 2, sd = 1)\naccept &lt;- runif(1000) &lt; target(X) / (1.5 * proposal(X))\n\nhist(X[accept], main=\"Accepted Samples from Target Distribution\", col=\"lightcoral\")",
    "crumbs": [
      "Slides",
      "Generating RVs"
    ]
  },
  {
    "objectID": "slides/Chapter3.html#transformation-of-random-variables",
    "href": "slides/Chapter3.html#transformation-of-random-variables",
    "title": "Computational Statistics",
    "section": "Transformation of Random Variables",
    "text": "Transformation of Random Variables\n\nIntroduction to transformation methods\nExample: Box-Muller transform for generating normal random variables\n\n\n# Box-Muller transform\nn &lt;- 1000\nU1 &lt;- runif(n)\nU2 &lt;- runif(n)\nZ1 &lt;- sqrt(-2 * log(U1)) * cos(2 * pi * U2)\nZ2 &lt;- sqrt(-2 * log(U1)) * sin(2 * pi * U2)\nhist(Z1, main=\"Normal Distribution via Box-Muller\", col=\"lightblue\")",
    "crumbs": [
      "Slides",
      "Generating RVs"
    ]
  },
  {
    "objectID": "slides/Chapter3.html#sums-and-mixtures",
    "href": "slides/Chapter3.html#sums-and-mixtures",
    "title": "Computational Statistics",
    "section": "Sums and Mixtures",
    "text": "Sums and Mixtures\n\nExplanation of sums and mixtures of random variables\nExample: Mixture of normals\n\n\n# Mixture of normals\nlibrary(MASS)\nmu1 &lt;- 0; mu2 &lt;- 3; sigma1 &lt;- 1; sigma2 &lt;- 2\np &lt;- 0.3\nX &lt;- ifelse(runif(n) &lt; p, rnorm(n, mu1, sigma1), rnorm(n, mu2, sigma2))\nhist(X, main=\"Mixture of Normal Distributions\", col=\"lightgreen\")",
    "crumbs": [
      "Slides",
      "Generating RVs"
    ]
  },
  {
    "objectID": "slides/Chapter2.html#random-variables-and-distributions",
    "href": "slides/Chapter2.html#random-variables-and-distributions",
    "title": "Computational Statistics",
    "section": "Random Variables and Distributions",
    "text": "Random Variables and Distributions\n\nOverview of random variables\nDiscrete vs Continuous random variables\nImportant distributions (Binomial, Normal, Chi-Square)\n\n\n# Simulating random variables\nN &lt;- 100; mu &lt;- 5; sig &lt;- 2\nY &lt;- rnorm(N, mean = mu, sd = sig)\nhist(Y, main=\"Histogram of Normal Distribution\", xlab=\"Y values\", col=\"lightblue\")",
    "crumbs": [
      "Slides",
      "Proba. and Stat. Review"
    ]
  },
  {
    "objectID": "slides/Chapter2.html#binomial-distribution",
    "href": "slides/Chapter2.html#binomial-distribution",
    "title": "Computational Statistics",
    "section": "Binomial Distribution",
    "text": "Binomial Distribution\n\nrbinom(), dbinom(), pbinom()\nExample: Generating binomial random variables\n\n\nrbinom(10, size=10, prob=0.5)\n\n [1] 2 7 2 5 3 4 5 3 7 7",
    "crumbs": [
      "Slides",
      "Proba. and Stat. Review"
    ]
  },
  {
    "objectID": "slides/Chapter2.html#poisson-distribution",
    "href": "slides/Chapter2.html#poisson-distribution",
    "title": "Computational Statistics",
    "section": "Poisson Distribution",
    "text": "Poisson Distribution\n\nrpois(), dpois(), ppois()\nExample: Simulating Poisson-distributed data\n\n\nrpois(10, lambda=2)\n\n [1] 4 4 1 2 1 1 2 1 2 1",
    "crumbs": [
      "Slides",
      "Proba. and Stat. Review"
    ]
  },
  {
    "objectID": "slides/Chapter2.html#normal-distribution",
    "href": "slides/Chapter2.html#normal-distribution",
    "title": "Computational Statistics",
    "section": "Normal Distribution",
    "text": "Normal Distribution\n\nrnorm(), dnorm(), pnorm()\nExample: Generating normal random variables\n\n\nrnorm(10, mean=0, sd=1)\n\n [1] -0.5089957  0.3570016  0.7315319  0.6213758  0.1188146  1.0370228\n [7] -0.8140598 -0.1643867  1.3406692 -0.3973381",
    "crumbs": [
      "Slides",
      "Proba. and Stat. Review"
    ]
  },
  {
    "objectID": "slides/Chapter2.html#exponential-distribution",
    "href": "slides/Chapter2.html#exponential-distribution",
    "title": "Computational Statistics",
    "section": "Exponential Distribution",
    "text": "Exponential Distribution\n\nrexp(), dexp(), pexp()\nSimulating exponential data in R",
    "crumbs": [
      "Slides",
      "Proba. and Stat. Review"
    ]
  },
  {
    "objectID": "slides/Chapter2.html#properties",
    "href": "slides/Chapter2.html#properties",
    "title": "Computational Statistics",
    "section": "Properties",
    "text": "Properties\n\nMean vector, covariance matrix\nMultivariate normal density\n\n\nlibrary(MASS)\nmvrnorm(n=10, mu=c(0,0), Sigma=matrix(c(1,0.5,0.5,1),2,2))\n\n             [,1]        [,2]\n [1,] -0.02613464 -0.73675222\n [2,]  0.47231589  0.01270687\n [3,] -0.17513497  1.44083644\n [4,]  1.68456408  1.03153143\n [5,]  1.01385378 -0.21003091\n [6,] -0.31601625  0.21884898\n [7,] -0.69383276 -1.45233273\n [8,] -0.28188885  0.14334031\n [9,] -1.43849376 -0.57980508\n[10,] -1.19755015  0.13452330",
    "crumbs": [
      "Slides",
      "Proba. and Stat. Review"
    ]
  },
  {
    "objectID": "slides/Chapter2.html#law-of-large-numbers",
    "href": "slides/Chapter2.html#law-of-large-numbers",
    "title": "Computational Statistics",
    "section": "Law of Large Numbers",
    "text": "Law of Large Numbers\n\nStatement of the law\nDemonstration using R\n\n\nn &lt;- 1000\nx &lt;- rnorm(n)\ncumsum(x) / 1:n\n\n   [1] -0.3020230835  0.3204274938  0.1309676132 -0.0672336596  0.1715740670\n   [6]  0.0720089466  0.0004091488  0.2622706282  0.2117051513  0.2053967064\n  [11]  0.3113321622  0.4399653253  0.4239583100  0.2145214045  0.0978324341\n  [16]  0.0787353498  0.0926446495  0.1306895427  0.1343298966  0.0787709945\n  [21]  0.1006492988  0.1029314487  0.1350877605  0.1227300963  0.0869758008\n  [26]  0.0882528393  0.0417758967  0.0411131015  0.0374348975  0.0072946322\n  [31]  0.0341807359  0.0163553401  0.0579664429  0.0330926167  0.0485078476\n  [36]  0.0512279697  0.0654929035  0.0980969321  0.1274615077  0.1084138183\n  [41]  0.0839773645  0.0520400399  0.0452480648  0.0330223483  0.0057096203\n  [46] -0.0022199875  0.0029420206  0.0121504327  0.0183934389  0.0011637751\n  [51]  0.0210161728  0.0336843683  0.0277018223  0.0612933049  0.0771781228\n  [56]  0.0696391414  0.0625209144  0.0479902921  0.0266365199  0.0325009373\n  [61]  0.0367592551  0.0299084450  0.0076133783  0.0216280670  0.0211271826\n  [66]  0.0234877715  0.0131567608  0.0158844926  0.0314017396  0.0203307421\n  [71]  0.0414749136  0.0232669349  0.0241515554  0.0309492664  0.0343844598\n  [76]  0.0348873406  0.0431901581  0.0530656922  0.0691880003  0.0684996121\n  [81]  0.0684884174  0.0657438122  0.0585011354  0.0466318890  0.0287527352\n  [86]  0.0279274075  0.0326705947  0.0397568531  0.0321773250  0.0541598921\n  [91]  0.0622706660  0.0693011671  0.0631353764  0.0563536421  0.0656724841\n  [96]  0.0751878599  0.0848730342  0.0985139070  0.1073636542  0.1021584858\n [101]  0.0871120418  0.0702539016  0.0624692097  0.0491099341  0.0398065504\n [106]  0.0370320460  0.0470565508  0.0388737226  0.0332999073  0.0294227094\n [111]  0.0203327802  0.0210310615  0.0388567849  0.0457416632  0.0611739499\n [116]  0.0639359437  0.0596794879  0.0472576006  0.0493049863  0.0490745503\n [121]  0.0382035665  0.0354014451  0.0404674448  0.0506182789  0.0407353902\n [126]  0.0590283682  0.0688409345  0.0566120270  0.0534346031  0.0604603659\n [131]  0.0752700853  0.0770524482  0.0654537454  0.0688221986  0.0586853274\n [136]  0.0602598749  0.0672681229  0.0674255487  0.0664673207  0.0712491437\n [141]  0.0602547809  0.0508457767  0.0516840025  0.0541738085  0.0582438543\n [146]  0.0585978375  0.0696763243  0.0828421406  0.0856045040  0.0775747929\n [151]  0.0761032439  0.0777537553  0.0853630945  0.0797626809  0.0865243901\n [156]  0.0814064522  0.0829393080  0.0753092998  0.0783356306  0.0878700580\n [161]  0.0892180790  0.0894141113  0.0843679784  0.0788381196  0.0725495915\n [166]  0.0740169019  0.0730679754  0.0843326235  0.0763931960  0.0751901244\n [171]  0.0645297118  0.0626393700  0.0734340743  0.0771240781  0.0742065999\n [176]  0.0737913040  0.0701993295  0.0665830392  0.0558479581  0.0580033508\n [181]  0.0694608833  0.0633153445  0.0633711387  0.0507699013  0.0495440679\n [186]  0.0466696707  0.0436849663  0.0442021458  0.0433142953  0.0356371128\n [191]  0.0415739706  0.0390830057  0.0515556625  0.0530883767  0.0479131168\n [196]  0.0465202318  0.0410736289  0.0414564550  0.0301604707  0.0260573883\n [201]  0.0252508289  0.0274025096  0.0306071482  0.0329838496  0.0291069963\n [206]  0.0310380053  0.0316364338  0.0211990257  0.0193154190  0.0191147364\n [211]  0.0217709373  0.0191780159  0.0187957089  0.0200462322  0.0179131752\n [216]  0.0212611390  0.0219714220  0.0225891914  0.0239299473  0.0171918159\n [221]  0.0197277765  0.0214168286  0.0186068878  0.0128376416  0.0113683332\n [226]  0.0068352228  0.0016643782  0.0098696381  0.0099987955  0.0084670996\n [231]  0.0114633314  0.0161112779  0.0130469093  0.0142078241  0.0177269174\n [236]  0.0180838534  0.0221391071  0.0214302571  0.0177303061  0.0112695363\n [241]  0.0032021401  0.0031210603 -0.0015243255 -0.0026145128 -0.0042671065\n [246] -0.0041969531 -0.0072475070 -0.0067744900 -0.0121522443 -0.0147929318\n [251] -0.0097449904 -0.0053193895 -0.0119306548 -0.0114978262 -0.0109445130\n [256] -0.0158625821 -0.0137517884 -0.0129135410 -0.0135084377 -0.0099676692\n [261] -0.0132634462 -0.0169724545 -0.0194306411 -0.0176857886 -0.0196882250\n [266] -0.0203685628 -0.0156264763 -0.0167400121 -0.0146590340 -0.0189798183\n [271] -0.0177869149 -0.0231238868 -0.0188853111 -0.0187171166 -0.0167396090\n [276] -0.0178141832 -0.0192374559 -0.0184106729 -0.0135004218 -0.0131759613\n [281] -0.0116321836 -0.0145938868 -0.0110729230 -0.0062651331 -0.0069238956\n [286] -0.0070852921 -0.0093942967 -0.0096881718 -0.0163981065 -0.0165049180\n [291] -0.0166261662 -0.0201444638 -0.0224322789 -0.0264334736 -0.0230005533\n [296] -0.0227790722 -0.0222396925 -0.0191261141 -0.0222682179 -0.0225326302\n [301] -0.0259518712 -0.0310590452 -0.0316209163 -0.0310126344 -0.0336908294\n [306] -0.0359614600 -0.0324307636 -0.0233663468 -0.0270318527 -0.0296056115\n [311] -0.0279401035 -0.0339401576 -0.0380444463 -0.0430892695 -0.0367485293\n [316] -0.0361250055 -0.0408069657 -0.0400243444 -0.0421198137 -0.0390082540\n [321] -0.0362796359 -0.0322436827 -0.0357617254 -0.0308660875 -0.0300534025\n [326] -0.0301838371 -0.0295560008 -0.0259298570 -0.0218583754 -0.0242974985\n [331] -0.0227071553 -0.0189293834 -0.0207827683 -0.0198919115 -0.0222927400\n [336] -0.0259346912 -0.0245756725 -0.0243302864 -0.0243219371 -0.0288217456\n [341] -0.0275089693 -0.0287969626 -0.0272982609 -0.0250673038 -0.0264330337\n [346] -0.0228074439 -0.0174414923 -0.0182720022 -0.0175696148 -0.0166039706\n [351] -0.0208753554 -0.0251721957 -0.0290078210 -0.0288453499 -0.0312771451\n [356] -0.0282469708 -0.0266186689 -0.0267830095 -0.0238236929 -0.0273452285\n [361] -0.0268599248 -0.0290841466 -0.0301876679 -0.0324594253 -0.0326971179\n [366] -0.0302054138 -0.0282977228 -0.0275615315 -0.0281080212 -0.0243218559\n [371] -0.0230909851 -0.0192133531 -0.0212608580 -0.0184085692 -0.0163396415\n [376] -0.0178334334 -0.0168033317 -0.0187093695 -0.0203429461 -0.0167026373\n [381] -0.0146998993 -0.0201055380 -0.0243176925 -0.0215050666 -0.0250360433\n [386] -0.0242290614 -0.0259991873 -0.0249650104 -0.0247165991 -0.0242319152\n [391] -0.0230040594 -0.0252947221 -0.0270203966 -0.0266025541 -0.0260841764\n [396] -0.0266265938 -0.0243229933 -0.0238903318 -0.0211976676 -0.0181751365\n [401] -0.0174384188 -0.0150342474 -0.0161785495 -0.0134711145 -0.0184838622\n [406] -0.0181741752 -0.0161670969 -0.0168676287 -0.0169195981 -0.0173739934\n [411] -0.0179669422 -0.0206839712 -0.0198911271 -0.0194615386 -0.0222718030\n [416] -0.0246862182 -0.0200566718 -0.0186292202 -0.0187807661 -0.0208517032\n [421] -0.0222453935 -0.0221169813 -0.0236083606 -0.0231652611 -0.0210964817\n [426] -0.0207149840 -0.0192094378 -0.0200936793 -0.0167032974 -0.0172404001\n [431] -0.0179980789 -0.0181624208 -0.0180931481 -0.0169566799 -0.0181079680\n [436] -0.0171540541 -0.0143627848 -0.0206183040 -0.0224556968 -0.0214592923\n [441] -0.0209051449 -0.0193398318 -0.0199428785 -0.0244874868 -0.0270062734\n [446] -0.0262982313 -0.0301879336 -0.0298579299 -0.0264757191 -0.0298177962\n [451] -0.0315216781 -0.0307195586 -0.0293353429 -0.0319227173 -0.0297753719\n [456] -0.0312886742 -0.0334068896 -0.0351678485 -0.0369076157 -0.0367817599\n [461] -0.0368559280 -0.0341189203 -0.0347703236 -0.0356991021 -0.0357113094\n [466] -0.0375900532 -0.0406292279 -0.0412871667 -0.0418669955 -0.0404872691\n [471] -0.0410161183 -0.0427090607 -0.0444800124 -0.0418098798 -0.0391909818\n [476] -0.0365791873 -0.0359551372 -0.0390773649 -0.0390321871 -0.0385496117\n [481] -0.0416421629 -0.0416800951 -0.0428142124 -0.0419325700 -0.0395653203\n [486] -0.0414897565 -0.0414901784 -0.0427003578 -0.0428180964 -0.0447927335\n [491] -0.0450668707 -0.0474064813 -0.0472985492 -0.0478529342 -0.0470395963\n [496] -0.0456516483 -0.0471503772 -0.0480596414 -0.0511405389 -0.0497216040\n [501] -0.0511766529 -0.0502215702 -0.0495279353 -0.0494290322 -0.0466993154\n [506] -0.0467104820 -0.0478923782 -0.0454995104 -0.0427197973 -0.0440964963\n [511] -0.0449510076 -0.0444785722 -0.0425740702 -0.0455457581 -0.0465081809\n [516] -0.0451549124 -0.0456844333 -0.0448193396 -0.0436501391 -0.0407207002\n [521] -0.0393728571 -0.0372267319 -0.0375077578 -0.0388629423 -0.0388015900\n [526] -0.0381592329 -0.0375690089 -0.0354903871 -0.0357171644 -0.0342169881\n [531] -0.0334313700 -0.0321866664 -0.0347033711 -0.0359315756 -0.0362545339\n [536] -0.0349025575 -0.0349835085 -0.0342064614 -0.0377077266 -0.0365101743\n [541] -0.0377038837 -0.0370284106 -0.0378720578 -0.0385166019 -0.0390820207\n [546] -0.0369871881 -0.0361859141 -0.0349407781 -0.0338051690 -0.0302957706\n [551] -0.0299970650 -0.0298942159 -0.0285734577 -0.0280534657 -0.0331710332\n [556] -0.0316319383 -0.0314562290 -0.0329566640 -0.0274202978 -0.0266003299\n [561] -0.0271417397 -0.0273656933 -0.0270237197 -0.0251052368 -0.0270232835\n [566] -0.0272940046 -0.0258502731 -0.0247954320 -0.0268221288 -0.0294368142\n [571] -0.0311838153 -0.0300448144 -0.0297239653 -0.0287067056 -0.0278786431\n [576] -0.0262349194 -0.0265120075 -0.0286396291 -0.0278653196 -0.0299569217\n [581] -0.0287335154 -0.0274546198 -0.0259924325 -0.0261268588 -0.0284110299\n [586] -0.0293052360 -0.0292702890 -0.0297648385 -0.0297593758 -0.0337397472\n [591] -0.0346771742 -0.0354030449 -0.0337169655 -0.0322021041 -0.0331769204\n [596] -0.0366970456 -0.0341244127 -0.0343237941 -0.0311613199 -0.0307874842\n [601] -0.0330677353 -0.0317675032 -0.0306375311 -0.0296645951 -0.0299695191\n [606] -0.0294095023 -0.0304600381 -0.0329401367 -0.0352648258 -0.0359202451\n [611] -0.0376072693 -0.0381416216 -0.0388447137 -0.0366964294 -0.0370844509\n [616] -0.0363588295 -0.0379005434 -0.0369727229 -0.0385047251 -0.0406396010\n [621] -0.0411394068 -0.0398514494 -0.0408271460 -0.0397334862 -0.0407181896\n [626] -0.0408172525 -0.0410022711 -0.0399066164 -0.0378580389 -0.0374624389\n [631] -0.0371517898 -0.0374492662 -0.0391451347 -0.0383691371 -0.0376209701\n [636] -0.0340536614 -0.0364142348 -0.0358659113 -0.0358101073 -0.0354711145\n [641] -0.0374493210 -0.0376818203 -0.0384158761 -0.0394105597 -0.0393649455\n [646] -0.0372348366 -0.0378921450 -0.0394809644 -0.0383833574 -0.0377431386\n [651] -0.0385065633 -0.0364969300 -0.0391313599 -0.0388260705 -0.0382330644\n [656] -0.0366000179 -0.0370512336 -0.0381753133 -0.0376080494 -0.0389717558\n [661] -0.0393340074 -0.0379725795 -0.0399229518 -0.0397967030 -0.0392889052\n [666] -0.0391090306 -0.0382128972 -0.0401927459 -0.0392751393 -0.0394814770\n [671] -0.0394592014 -0.0404160928 -0.0392944925 -0.0387317492 -0.0375334161\n [676] -0.0337096461 -0.0325959436 -0.0325532336 -0.0337087200 -0.0307998469\n [681] -0.0304351528 -0.0310808255 -0.0326103388 -0.0322065169 -0.0313461205\n [686] -0.0315218177 -0.0334907206 -0.0328501354 -0.0320233812 -0.0329013552\n [691] -0.0335281644 -0.0311368162 -0.0319913463 -0.0315804871 -0.0323337265\n [696] -0.0318351136 -0.0318962210 -0.0322854189 -0.0328240921 -0.0292986361\n [701] -0.0273201971 -0.0266929036 -0.0267949877 -0.0243242485 -0.0256646145\n [706] -0.0240746319 -0.0252704896 -0.0252992790 -0.0246281942 -0.0253270690\n [711] -0.0253633879 -0.0275422987 -0.0287785978 -0.0274299571 -0.0284734811\n [716] -0.0277194310 -0.0292631856 -0.0283399915 -0.0270317470 -0.0278496806\n [721] -0.0279147546 -0.0276612870 -0.0285475542 -0.0275641514 -0.0293175534\n [726] -0.0290131008 -0.0289879010 -0.0275735396 -0.0282808996 -0.0270003051\n [731] -0.0274092111 -0.0254214498 -0.0240264169 -0.0242573789 -0.0219085217\n [736] -0.0208416995 -0.0218395973 -0.0196139690 -0.0185847529 -0.0204669451\n [741] -0.0222046078 -0.0210389333 -0.0205845653 -0.0183916387 -0.0175984717\n [746] -0.0194947166 -0.0198252104 -0.0203792049 -0.0210356955 -0.0201148907\n [751] -0.0197781720 -0.0159402462 -0.0140968776 -0.0123274841 -0.0134086019\n [756] -0.0154701405 -0.0174997852 -0.0167519992 -0.0195003440 -0.0195679092\n [761] -0.0221305304 -0.0198765137 -0.0192210298 -0.0204618276 -0.0216138444\n [766] -0.0231805623 -0.0271829712 -0.0264224441 -0.0260722980 -0.0257447868\n [771] -0.0247444905 -0.0244100372 -0.0235804325 -0.0236692270 -0.0221607621\n [776] -0.0240737065 -0.0249319487 -0.0264088794 -0.0262498257 -0.0258163920\n [781] -0.0268828188 -0.0282155551 -0.0301440646 -0.0294845836 -0.0301609423\n [786] -0.0301344357 -0.0294325005 -0.0312650516 -0.0293112351 -0.0294576027\n [791] -0.0291222049 -0.0302605940 -0.0288174192 -0.0276737732 -0.0267395850\n [796] -0.0303366881 -0.0292263561 -0.0297543385 -0.0306310882 -0.0309337758\n [801] -0.0290210175 -0.0281463017 -0.0275464112 -0.0272765796 -0.0269724409\n [806] -0.0253254721 -0.0263486140 -0.0240222932 -0.0226795441 -0.0236804972\n [811] -0.0245327724 -0.0246040232 -0.0243663155 -0.0233534441 -0.0230691100\n [816] -0.0221891437 -0.0216440230 -0.0199806484 -0.0195691473 -0.0181526483\n [821] -0.0159882754 -0.0153866739 -0.0164427493 -0.0161614976 -0.0150967529\n [826] -0.0156146703 -0.0160633294 -0.0173968605 -0.0186856822 -0.0179275509\n [831] -0.0195217911 -0.0201752707 -0.0218955167 -0.0199984039 -0.0205591466\n [836] -0.0197644752 -0.0193954844 -0.0209960079 -0.0196060514 -0.0178886816\n [841] -0.0176914854 -0.0191203574 -0.0203830305 -0.0209114865 -0.0190235360\n [846] -0.0207648702 -0.0199568685 -0.0188619931 -0.0169728270 -0.0156070170\n [851] -0.0155854275 -0.0162429188 -0.0136370612 -0.0117447956 -0.0146072412\n [856] -0.0142694960 -0.0121825997 -0.0137671516 -0.0128305983 -0.0131361889\n [861] -0.0153284714 -0.0159294012 -0.0164543299 -0.0168259651 -0.0152296740\n [866] -0.0154018023 -0.0155810851 -0.0160032978 -0.0142269449 -0.0152288614\n [871] -0.0146045288 -0.0126927770 -0.0139335589 -0.0153247074 -0.0163243490\n [876] -0.0163267059 -0.0148002121 -0.0144388733 -0.0138030185 -0.0137833367\n [881] -0.0149383683 -0.0133218947 -0.0130781794 -0.0136409042 -0.0141554688\n [886] -0.0153352743 -0.0148322479 -0.0161410086 -0.0175208993 -0.0160860317\n [891] -0.0159206006 -0.0151738280 -0.0154742400 -0.0164632316 -0.0157481621\n [896] -0.0176742056 -0.0171164922 -0.0172397469 -0.0170810665 -0.0188851855\n [901] -0.0200250227 -0.0201624563 -0.0198948796 -0.0203956234 -0.0204677566\n [906] -0.0206029767 -0.0189831430 -0.0170849506 -0.0180867678 -0.0176057651\n [911] -0.0177101910 -0.0200979748 -0.0204644998 -0.0214445494 -0.0222121835\n [916] -0.0227111388 -0.0227682927 -0.0214214570 -0.0212190097 -0.0208588789\n [921] -0.0224011106 -0.0237586996 -0.0234979202 -0.0242196180 -0.0239364721\n [926] -0.0234312269 -0.0248559470 -0.0242553282 -0.0240947446 -0.0247267291\n [931] -0.0241227000 -0.0246399728 -0.0240196675 -0.0249841871 -0.0243225429\n [936] -0.0237141310 -0.0236861361 -0.0252830505 -0.0247147702 -0.0244579692\n [941] -0.0245282330 -0.0242449153 -0.0257224808 -0.0248910001 -0.0238881065\n [946] -0.0231175021 -0.0233210743 -0.0229382379 -0.0233823753 -0.0219087122\n [951] -0.0225114343 -0.0238818586 -0.0219620640 -0.0219781254 -0.0218795443\n [956] -0.0234994892 -0.0235092875 -0.0226453361 -0.0209653247 -0.0202079010\n [961] -0.0194020251 -0.0204625067 -0.0209518438 -0.0222151701 -0.0218560484\n [966] -0.0232716832 -0.0234308096 -0.0240615004 -0.0237793832 -0.0239089573\n [971] -0.0251364379 -0.0249469495 -0.0253325619 -0.0262777046 -0.0281099813\n [976] -0.0292508708 -0.0305153719 -0.0300685727 -0.0284806751 -0.0296068101\n [981] -0.0306380261 -0.0311014398 -0.0325822784 -0.0318795723 -0.0314293108\n [986] -0.0296493419 -0.0297234176 -0.0299228978 -0.0298592448 -0.0297628732\n [991] -0.0288675121 -0.0303143280 -0.0305693313 -0.0317699941 -0.0308149152\n [996] -0.0306501085 -0.0309994386 -0.0315970820 -0.0338336028 -0.0330833843",
    "crumbs": [
      "Slides",
      "Proba. and Stat. Review"
    ]
  },
  {
    "objectID": "slides/Chapter2.html#central-limit-theorem",
    "href": "slides/Chapter2.html#central-limit-theorem",
    "title": "Computational Statistics",
    "section": "Central Limit Theorem",
    "text": "Central Limit Theorem\n\nDiscuss the CLT and its importance in statistics\nSimulating the CLT with normal distributions\n\n\n# Central Limit Theorem simulation\nmeans &lt;- replicate(1000, mean(rnorm(100, mean = mu, sd = sig)))\nhist(means, main=\"Central Limit Theorem\", col=\"lightgreen\", border=\"black\")",
    "crumbs": [
      "Slides",
      "Proba. and Stat. Review"
    ]
  },
  {
    "objectID": "slides/Chapter5.html#customizing-scatterplot-matrices",
    "href": "slides/Chapter5.html#customizing-scatterplot-matrices",
    "title": "Computational Statistics",
    "section": "Customizing Scatterplot Matrices",
    "text": "Customizing Scatterplot Matrices\n\nCustomizing scatterplot matrices with density plots\n\n\n# Adding density plots to scatterplot matrix\npanel.d &lt;- function(x, ...) {\n    usr &lt;- par(\"usr\")\n    on.exit(par(usr))\n    par(usr = c(usr[1:2], 0, .5))\n    lines(density(x), col=\"red\")\n}\npairs(iris[101:150, 1:4], panel = panel.d, main=\"Customized Scatterplot Matrix\")",
    "crumbs": [
      "Slides",
      "Visualization"
    ]
  },
  {
    "objectID": "slides/Chapter13.html#numerical-precision-and-floating-point-arithmetic",
    "href": "slides/Chapter13.html#numerical-precision-and-floating-point-arithmetic",
    "title": "Computational Statistics",
    "section": "Numerical Precision and Floating-Point Arithmetic",
    "text": "Numerical Precision and Floating-Point Arithmetic\n\nIntroduction to floating-point arithmetic in R\nBrain teasers: TRUE or FALSE?\n\n\n# Examples of floating-point precision\n1==1\n\n[1] TRUE\n\n3-2==1\n\n[1] TRUE\n\n\n\n\n0.3-0.2==0.1\n\n[1] FALSE\n\n\n\n\n0.4-0.2==0.2\n\n[1] TRUE",
    "crumbs": [
      "Slides",
      "Numerical Methods in R"
    ]
  },
  {
    "objectID": "slides/Chapter13.html#binary-representation",
    "href": "slides/Chapter13.html#binary-representation",
    "title": "Computational Statistics",
    "section": "Binary Representation",
    "text": "Binary Representation\n\nDiscussion on binary fractions and limitations\nResources:\n\nBinary Fraction Calculator\nFloating Point Problem",
    "crumbs": [
      "Slides",
      "Numerical Methods in R"
    ]
  },
  {
    "objectID": "slides/Chapter13.html#iterative-methods",
    "href": "slides/Chapter13.html#iterative-methods",
    "title": "Computational Statistics",
    "section": "Iterative Methods",
    "text": "Iterative Methods\n\nIntroduction to iterative methods in numerical analysis\n\n\n# Example: Calculating large integers\nas.integer(2^31-1)\n\n[1] 2147483647\n\nas.integer(2^31)\n\n[1] NA",
    "crumbs": [
      "Slides",
      "Numerical Methods in R"
    ]
  },
  {
    "objectID": "slides/Chapter13.html#numerical-integration",
    "href": "slides/Chapter13.html#numerical-integration",
    "title": "Computational Statistics",
    "section": "Numerical Integration",
    "text": "Numerical Integration\n\nExample of numerical integration using base R functions\n\n\n# Numerical integration using integrate function\nf &lt;- function(x) sin(x)\nintegrate(f, lower = 0, upper = pi)\n\n2 with absolute error &lt; 2.2e-14",
    "crumbs": [
      "Slides",
      "Numerical Methods in R"
    ]
  },
  {
    "objectID": "slides/Chapter13.html#conclusion",
    "href": "slides/Chapter13.html#conclusion",
    "title": "Computational Statistics",
    "section": "Conclusion",
    "text": "Conclusion\n\nRecap of numerical precision, floating-point arithmetic, and numerical integration methods\nPractice: Apply numerical methods to solve optimization and integration problems\n\n\n\n\n\n🔗 tinyurl.com/Comp-Stat",
    "crumbs": [
      "Slides",
      "Numerical Methods in R"
    ]
  },
  {
    "objectID": "course-overview.html",
    "href": "course-overview.html",
    "title": "Course overview",
    "section": "",
    "text": "This is the homepage for MATH 4750 (MSSC 5750) - Computational Statistics by Dr. Mehdi Maadooliat in Spring 2025 at Marquette University. All course materials will be posted on this site.\nYou can find the course syllabus here (course flyer here) and the course schedule here.",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  },
  {
    "objectID": "course-overview.html#class-meetings",
    "href": "course-overview.html#class-meetings",
    "title": "Course overview",
    "section": "Class meetings",
    "text": "Class meetings\n\n\n\nMeeting\nLocation\nTime\n\n\n\n\nLecture\nDavid Straz Nursing 402\nTue & Thur 2:00 - 3:15 pm\n\n\nOffice Hours\nCU 351\nTue & Thur 12:25 - 1:55 pm",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  }
]